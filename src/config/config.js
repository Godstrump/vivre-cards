require("dotenv").config();

const config = {
    development: {
        access_secret: process.env.TOKEN_SECRET,        
        refresh_secret: process.env.REFRESH_SECRET,
        admin_secret: process.env.ADMIN_TOKEN_SECRET,
        cac_webhook: process.env.CAC_WEBHOOK,
        cac_auth: process.env.CAC_AUTH,
        cac_url: process.env.CAC_URL,
        cac_oauth_url: process.env.CAC_TOKEN_URL_OAUTH,
        mongodb_uri: process.env.MONGO_DB,
        aws_region: process.env.AWS_REGION,
        aws_profile: process.env.AWS_PROFILE,
        aws_media_bucket: process.env.AWS_MEDIA_BUCKET,
        aws_access_key: process.env.AWS_ACCESS_KEY,
        aws_secret_key: process.env.AWS_SECRET_KEY,
        aws_send_email: process.env.AWS_EMAIL_URL,
        aws_send_raw_email: process.env.AWS_RAW_EMAIL_URL,
        verify_email_urL: process.env.VERIFY_EMAIL_URL,
        recover_user_url: process.env.RECOVER_USER_URL,
        brex_url: process.env.BREX_URL,
        brex_token: process.env.BREX_TOKEN,
        app_url: process.env.APP_URL,
        providus_ra_url: process.env.PROVIDUS_RA_URL, //RA reserved account
        providus_va_url: process.env.PROVIDUS_VA_URL, //VA virtual account
        providus_verify_tx: process.env.PROVIDUS_VERIFY_TX,
        providus_bl_acct: process.env.PROVIDUS_BLACKLIST_ACCT,
        providus_client_id: process.env.PROVIDUS_CLIENT_ID,
        providus_client_secret: process.env.PROVIDUS_CLIENT_SECRET,
        lazer_secret: process.env.LAZER_PAY_SECRET,
        lazerpay_url: process.env.LAZER_PAY_URL,
        lazer_public_key: process.env.LAZER_PAY_PUBLIC_KEY,
        providus_x_auth: process.env.PROVIDUS_X_AUTH,
        meta_mask_token: process.env.META_MASK_TOKEN,
        meta_mask_api_url: process.env.META_MASK_API_URL,
    },
    jwt: {
        secret: process.env.JWT_SECRET,
    },
    production: {
        access_secret: process.env.TOKEN_SECRET,        
        refresh_secret: process.env.REFRESH_SECRET,
        admin_secret: process.env.ADMIN_TOKEN_SECRET,
        cac_webhook: process.env.CAC_WEBHOOK,
        cac_auth: process.env.CAC_AUTH,
        cac_url: process.env.CAC_URL,
        cac_oauth_url: process.env.CAC_TOKEN_URL_OAUTH,
        mongodb_uri: process.env.MONGO_DB,
        aws_region: process.env.AWS_REGION,
        aws_profile: process.env.AWS_PROFILE,
        aws_media_bucket: process.env.AWS_MEDIA_BUCKET,
        aws_access_key: process.env.AWS_ACCESS_KEY,
        aws_secret_key: process.env.AWS_SECRET_KEY,
        aws_send_email: process.env.AWS_EMAIL_URL,
        aws_send_raw_email: process.env.AWS_RAW_EMAIL_URL,
        verify_email_urL: process.env.VERIFY_EMAIL_URL,
        recover_user_url: process.env.RECOVER_USER_URL,
        brex_url: process.env.BREX_URL,
        brex_token: process.env.BREX_TOKEN,
        app_url: process.env.APP_URL,
        providus_ra_url: process.env.PROVIDUS_RA_URL, //RA reserved account
        providus_va_url: process.env.PROVIDUS_VA_URL, //VA virtual account
        providus_verify_tx: process.env.PROVIDUS_VERIFY_TX,
        providus_bl_acct: process.env.PROVIDUS_BLACKLIST_ACCT,
        providus_client_id: process.env.PROVIDUS_CLIENT_SECRET,
        providus_client_secret: process.env.PROVIDUS_CLIENT_SECRET,
        lazer_secret: process.env.LAZER_PAY_SECRET,
        lazer_public_key: process.env.LAZER_PAY_PUBLIC_KEY,
        lazerpay_url: process.env.LAZER_PAY_URL,
        providus_x_auth: process.env.PROVIDUS_X_AUTH,
        meta_mask_token: process.env.META_MASK_TOKEN,
        meta_mask_api_url: process.env.META_MASK_API_URL,
    },
};

module.exports = config[process.env.NODE_ENV];
